#<ctype.h>
int isalnum(int c);
int isalpha(int c);
int isblank(int c);
int iscntrl(int c);
int isdigit(int c);
int isgraph(int c);
int islower(int c);
int isprint(int c);
int ispunct(int c);
int isspace(int c);
int isupper(int c);
int isxdigit(int c);
int tolower(int c);
int toupper(int c);
#<fenv.h>
int feclearexcept(int excepts);
int feraiseexcept(int excepts);
int fetestexcept(int excepts);
int fegetround(void);
int fesetround(int round);
#<locale.h>
char *setlocale(int category, const char *locale);
#<match.h>
double acos(double x);
float acosf(float x);
long double acosl(long double x);
double asin(double x);
float asinf(float x);
long double asinl(long double x);
double atan(double x);
float atanf(float x);
long double atanl(long double x);
double atan2(double y, double x);
float atan2f(float y, float x);
long double atan2l(long double y, long double x);
double cos(double x);
float cosf(float x);
long double cosl(long double x);
double sin(double x);
float sinf(float x);
long double sinl(long double x);
double tan(double x);
float tanf(float x);
long double tanl(long double x);
double acosh(double x);
float acoshf(float x);
long double acoshl(long double x);
double asinh(double x);
float asinhf(float x);
long double asinhl(long double x);
double atanh(double x);
float atanhf(float x);
long double atanhl(long double x);
double cosh(double x);
float coshf(float x);
long double coshl(long double x);
double sinh(double x);
float sinhf(float x);
long double sinhl(long double x);
double tanh(double x);
float tanhf(float x);
long double tanhl(long double x);
double exp(double x);
float expf(float x);
long double expl(long double x);
double exp2(double x);
float exp2f(float x);
long double exp2l(long double x);
double expm1(double x);
float expm1f(float x);
long double expm1l(long double x);
double frexp(double value, int *exp);
float frexpf(float value, int *exp);
long double frexpl(long double value, int *exp);
int ilogb(double x);
int ilogbf(float x);
int ilogbl(long double x);
double ldexp(double x, int exp);
float ldexpf(float x, int exp);
long double ldexpl(long double x, int exp);
double log(double x);
float logf(float x);
long double logl(long double x);
double log10(double x);
float log10f(float x);
long double log10l(long double x);
double log1p(double x);
float log1pf(float x);
long double log1pl(long double x);
double log2(double x);
float log2f(float x);
long double log2l(long double x);
double logb(double x);
float logbf(float x);
long double logbl(long double x);
double modf(double value, double *iptr);
float modff(float value, float *iptr);
long double modfl(long double value, long double *iptr);
double scalbn(double x, int n);
float scalbnf(float x, int n);
long double scalbnl(long double x, int n);
double scalbln(double x, long int n);
float scalblnf(float x, long int n);
long double scalblnl(long double x, long int n);
double cbrt(double x);
float cbrtf(float x);
long double cbrtl(long double x);
double fabs(double x);
float fabsf(float x);
long double fabsl(long double x);
double hypot(double x, double y);
float hypotf(float x, float y);
long double hypotl(long double x, long double y);
double pow(double x, double y);
float powf(float x, float y);
long double powl(long double x, long double y);
double sqrt(double x);
float sqrtf(float x);
long double sqrtl(long double x);
double erf(double x);
float erff(float x);
long double erfl(long double x);
double erfc(double x);
float erfcf(float x);
long double erfcl(long double x);
double lgamma(double x);
float lgammaf(float x);
long double lgammal(long double x);
double tgamma(double x);
float tgammaf(float x);
long double tgammal(long double x);
double ceil(double x);
float ceilf(float x);
long double ceill(long double x);
double floor(double x);
float floorf(float x);
long double floorl(long double x);
double nearbyint(double x);
float nearbyintf(float x);
long double nearbyintl(long double x);
double rint(double x);
float rintf(float x);
long double rintl(long double x);
long int lrint(double x);
long int lrintf(float x);
long int lrintl(long double x);
long long int llrint(double x);
long long int llrintf(float x);
long long int llrintl(long double x);
double round(double x);
float roundf(float x);
long double roundl(long double x);
long int lround(double x);
long int lroundf(float x);
long int lroundl(long double x);
long long int llround(double x);
long long int llroundf(float x);
long long int llroundl(long double x);
double trunc(double x);
float truncf(float x);
long double truncl(long double x);
double fmod(double x, double y);
float fmodf(float x, float y);
long double fmodl(long double x, long double y);
double remainder(double x, double y);
float remainderf(float x, float y);
long double remainderl(long double x, long double y);
double remquo(double x, double y, int *quo);
float remquof(float x, float y, int *quo);
long double remquol(long double x, long double y,int *quo);
double copysign(double x, double y);
float copysignf(float x, float y);
long double copysignl(long double x, long double y);
double nan(const char *tagp);
float nanf(const char *tagp);
long double nanl(const char *tagp);
double nextafter(double x, double y);
float nextafterf(float x, float y);
long double nextafterl(long double x, long double y);
double nexttoward(double x, long double y);
float nexttowardf(float x, long double y);
long double nexttowardl(long double x, long double y);
double fdim(double x, double y);
float fdimf(float x, float y);
long double fdiml(long double x, long double y);
double fmax(double x, double y);
float fmaxf(float x, float y);
long double fmaxl(long double x, long double y);
double fmin(double x, double y);
float fminf(float x, float y);
long double fminl(long double x, long double y);
double fma(double x, double y, double z);
float fmaf(float x, float y, float z);
long double fmal(long double x, long double y,long double z);
#<signal.h>
int raise(int sig);
#<stdio.h>
int remove(const char *filename);
int rename(const char *old, const char *new);
FILE *tmpfile(void);
char *tmpnam(char *s);
int fclose(FILE *stream);
int fflush(FILE *stream);
FILE *fopen(const char * restrict filename,const char * restrict mode);
FILE *freopen(const char * restrict filename,const char * restrict mode,FILE * restrict stream);
void setbuf(FILE * restrict stream,char * restrict buf);
int setvbuf(FILE * restrict stream,char * restrict buf,int mode, size_t size);
int fprintf(FILE * restrict stream,const char * restrict format, ...);
int fscanf(FILE * restrict stream,const char * restrict format, ...);
int printf(const char * restrict format, ...);
int scanf(const char * restrict format, ...);
int snprintf(char * restrict s, size_t n,const char * restrict format, ...);
int sprintf(char * restrict s,const char * restrict format, ...);
int sscanf(const char * restrict s,const char * restrict format, ...);
int fgetc(FILE *stream);
char *fgets(char * restrict s, int n,FILE * restrict stream);
int fputc(int c, FILE *stream);
int fputs(const char * restrict s,FILE * restrict stream);
int getc(FILE *stream);
int getchar(void);
int putc(int c, FILE *stream);
int putchar(int c);
int puts(const char *s);
int ungetc(int c, FILE *stream);
size_t fread(void * restrict ptr,size_t size, size_t nmemb,FILE * restrict stream);
size_t fwrite(const void * restrict ptr,size_t size, size_t nmemb,FILE * restrict stream);
int fgetpos(FILE * restrict stream,fpos_t * restrict pos);
int fseek(FILE *stream, long int offset, int whence);
int fsetpos(FILE *stream, const fpos_t *pos);
long int ftell(FILE *stream);
void rewind(FILE *stream);
void clearerr(FILE *stream);
int feof(FILE *stream);
int ferror(FILE *stream);
void perror(const char *s);
int fprintf_s(FILE * restrict stream,const char * restrict format, ...);
int fscanf_s(FILE * restrict stream,const char * restrict format, ...);
int printf_s(const char * restrict format, ...);
int scanf_s(const char * restrict format, ...);
int snprintf_s(char * restrict s, rsize_t n,const char * restrict format, ...);
int sprintf_s(char * restrict s, rsize_t n,const char * restrict format, ...);
int sscanf_s(const char * restrict s,const char * restrict format, ...);
#<stdlib.h>
double atof(const char *nptr);
int atoi(const char *nptr);
long int atol(const char *nptr);
long long int atoll(const char *nptr);
double strtod(const char * restrict nptr,char ** restrict endptr);
float strtof(const char * restrict nptr,char ** restrict endptr);
long double strtold(const char * restrict nptr,char ** restrict endptr);
long int strtol(const char * restrict nptr,char ** restrict endptr, int base);
long long int strtoll(const char * restrict nptr,char ** restrict endptr, int base);
unsigned long int strtoul(const char * restrict nptr,char ** restrict endptr, int base);
unsigned long long int strtoull(const char * restrict nptr,char ** restrict endptr, int base);
int rand(void);
void srand(unsigned int seed);
void *aligned_alloc(size_t alignment, size_t size);
#void *calloc(size_t nmemb, size_t size);
void free(void *ptr);
void *malloc(size_t size);
void *realloc(void *ptr, size_t size);
void abort(void);
#int atexit(void (*func)(void));
#int at_quick_exit(void (*func)(void));
void exit(int status);
void _Exit(int status);
char *getenv(const char *name);
void quick_exit(int status);
int system(const char *string);
#void *bsearch(const void *key, const void *base, size_t nmemb, size_t size,int (*compar)(const void *, const void *));
#void qsort(void *base, size_t nmemb, size_t size,int (*compar)(const void *, const void *));
int abs(int j);
long int labs(long int j);
long long int llabs(long long int j);
#div_t div(int numer, int denom);
#ldiv_t ldiv(long int numer, long int denom);
#lldiv_t lldiv(long long int numer,long long int denom);
int mblen(const char *s, size_t n);
int mbtowc(wchar_t * restrict pwc,const char * restrict s, size_t n);
int wctomb(char *s, wchar_t wchar);
size_t mbstowcs(wchar_t * restrict pwcs,const char * restrict s, size_t n);
size_t wcstombs(char * restrict s,const wchar_t * restrict pwcs, size_t n);
#<string.h>
void *memcpy(void * restrict s1,const void * restrict s2, size_t n);
void *memmove(void *s1, const void *s2, size_t n);
char *strcpy(char * restrict s1,const char * restrict s2);
char *strncpy(char * restrict s1,const char * restrict s2, size_t n);
char *strcat(char * restrict s1,const char * restrict s2);
char *strncat(char * restrict s1,const char * restrict s2, size_t n);
int memcmp(const void *s1, const void *s2, size_t n);
int strcmp(const char *s1, const char *s2);
int strcoll(const char *s1, const char *s2);
int strncmp(const char *s1, const char *s2, size_t n);
size_t strxfrm(char * restrict s1,const char * restrict s2, size_t n);
void *memchr(const void *s, int c, size_t n);
char *strchr(const char *s, int c);
size_t strcspn(const char *s1, const char *s2);
char *strpbrk(const char *s1, const char *s2);
char *strrchr(const char *s, int c);
size_t strspn(const char *s1, const char *s2);
char *strstr(const char *s1, const char *s2);
char *strtok(char * restrict s1,const char * restrict s2);
void *memset(void *s, int c, size_t n);
char *strerror(int errnum);
size_t strlen(const char *s);
#size_t strerrorlen_s(errno_t errnum);
size_t strnlen(const char *s, size_t maxsize);
size_t strnlen_s(const char *s, size_t maxsize);
#<wchar.h>
int fwprintf(FILE * restrict stream,const wchar_t * restrict format, ...);
int fwscanf(FILE * restrict stream,const wchar_t * restrict format, ...);
int swprintf(wchar_t * restrict s, size_t n,const wchar_t * restrict format, ...);
int swscanf(const wchar_t * restrict s,const wchar_t * restrict format, ...);
int vfwprintf(FILE * restrict stream,const wchar_t * restrict format, va_list arg);
int wprintf(const wchar_t * restrict format, ...);
int wscanf(const wchar_t * restrict format, ...);
wint_t fgetwc(FILE *stream);
wchar_t *fgetws(wchar_t * restrict s, int n,FILE * restrict stream);
wint_t fputwc(wchar_t c, FILE *stream);
int fputws(const wchar_t * restrict s,FILE * restrict stream);
int fwide(FILE *stream, int mode);
wint_t getwc(FILE *stream);
wint_t getwchar(void);
wint_t putwc(wchar_t c, FILE *stream);
wint_t putwchar(wchar_t c);
wint_t ungetwc(wint_t c, FILE *stream);
double wcstod(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
float wcstof(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
long double wcstold(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
long int wcstol(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
long long int wcstoll(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
unsigned long int wcstoul(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
unsigned long long int wcstoull(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
wchar_t *wcscpy(wchar_t * restrict s1,const wchar_t * restrict s2);
wchar_t *wcsncpy(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
wchar_t *wmemcpy(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
wchar_t *wmemmove(wchar_t *s1, const wchar_t *s2,size_t n);
wchar_t *wcscat(wchar_t * restrict s1,const wchar_t * restrict s2);
wchar_t *wcsncat(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
int wcscmp(const wchar_t *s1, const wchar_t *s2);
int wcscoll(const wchar_t *s1, const wchar_t *s2);
int wcsncmp(const wchar_t *s1, const wchar_t *s2,size_t n);
size_t wcsxfrm(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
int wmemcmp(const wchar_t *s1, const wchar_t *s2,size_t n);
wchar_t *wcschr(const wchar_t *s, wchar_t c);
size_t wcscspn(const wchar_t *s1, const wchar_t *s2);
wchar_t *wcspbrk(const wchar_t *s1, const wchar_t *s2);
wchar_t *wcsrchr(const wchar_t *s, wchar_t c);
size_t wcsspn(const wchar_t *s1, const wchar_t *s2);
wchar_t *wcsstr(const wchar_t *s1, const wchar_t *s2);
wchar_t *wcstok(wchar_t * restrict s1,const wchar_t * restrict s2,wchar_t ** restrict ptr);
wchar_t *wmemchr(const wchar_t *s, wchar_t c, size_t n);
size_t wcslen(const wchar_t *s);
wchar_t *wmemset(wchar_t *s, wchar_t c, size_t n);
size_t wcsftime(wchar_t * restrict s, size_t maxsize,const wchar_t * restrict format,const struct tm * restrict timeptr);
wint_t btowc(int c);
int wctob(wint_t c);
int mbsinit(const mbstate_t *ps);
size_t mbrlen(const char * restrict s, size_t n,mbstate_t * restrict ps);
size_t mbrtowc(wchar_t * restrict pwc,const char * restrict s, size_t n,mbstate_t * restrict ps);
size_t wcrtomb(char * restrict s, wchar_t wc,mbstate_t * restrict ps);
size_t mbsrtowcs(wchar_t * restrict dst,const char ** restrict src, size_t len, mbstate_t * restrict ps);
size_t wcsrtombs(char * restrict dst,const wchar_t ** restrict src, size_t len, mbstate_t * restrict ps);
#errno_t wcscpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2);
#errno_t wcsncpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
#errno_t wmemcpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
#errno_t wmemmove_s(wchar_t *s1, rsize_t s1max,const wchar_t *s2, rsize_t n);
#errno_t wcscat_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2);
#errno_t wcsncat_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
#wchar_t *wcstok_s(wchar_t * restrict s1,rsize_t * restrict s1max,const wchar_t * restrict s2,wchar_t ** restrict ptr);
size_t wcsnlen_s(const wchar_t *s, size_t maxsize);
#errno_t wcrtomb_s(size_t * restrict retval,char * restrict s, rsize_t smax,wchar_t wc, mbstate_t * restrict ps);
#errno_t mbsrtowcs_s(size_t * restrict retval,wchar_t * restrict dst, rsize_t dstmax,const char ** restrict src, rsize_t len,mbstate_t * restrict ps);
#errno_t wcsrtombs_s(size_t * restrict retval,char * restrict dst, rsize_t dstmax,const wchar_t ** restrict src, rsize_t len,mbstate_t * restrict ps);
pid_t fork(void);
long sysconf(int name);
int close(int fildes);
int sigemptyset(sigset_t *set);
char *bindtextdomain(const char * domainname, const char * dirname);
gid_t getgid(void);
uid_t getuid(void);
uid_t geteuid(void);
pid_t getpid(void);
pid_t getppid(void);
gid_t getegid(void);
pid_t getpgrp(void);
int gethostname(char *name, size_t len);
int sigprocmask(int how, const sigset_t *set, sigset_t *oldset);
char *dcgettext(const char * domainname, const char * msgid, int category);
char *strsignal(int sig);
int dup(int fildes);
int dup2(int fildes, int fildes2);
off64_t lseek64(int fd, off64_t offset, int whence);
int eaccess(const char *pathname, int mode);
pid_t wait(int *stat_loc);
pid_t waitpid(pid_t pid, int *stat_loc, int options);
#NOTE: fcntl might use variable length args
#int fcntl(int fd, int cmd, ...);
#int fcntl(int fd, int cmd);
int sigaction(int sig, const struct sigaction *restrict act,struct sigaction *restrict oact);
int sigaddset(sigset_t *set, int signum);
int getpagesize(void);
int isatty(int fd);
int fileno(FILE *stream);
#int open64(const char *pathname, int oflag,...);
int gettimeofday(struct timeval *tv, struct timezone *tz);
time_t time(time_t *t);
int getdtablesize(void);
void *sbrk(intptr_t increment);
int sigismember(const sigset_t *set, int signum);
int sigfillset(sigset_t *set);
int sigdelset(sigset_t *set, int signum);
ssize_t read(int fd, void *buf, size_t count);
int pipe(int fildes[2]);
char *textdomain (const char * domainname);
char * __strcpy_chk(char *dest, const char *src, size_t destlen);
int __snprintf_chk(char *str, size_t maxlen, int flag, size_t strlen, const char *format);
int __fprintf_chk(FILE *stream, int flag, const char *format);
#int __sigsetjmp(jmp_buf env, int savemask);
int * __errno_location(void);
void  __fpurge(FILE *stream);
int __xstat64(int var, const char *path, struct stat64 *stat_buf);
size_t __ctype_get_mb_cur_max(void);
const unsigned short * * __ctype_b_loc(void);
long long __strtoll_internal(const char *__nptr, char * *__endptr, int __base, int __group);
int __fxstat64(int ver, int fildes, struct stat64 * stat_buf);

#<libvirt-domain>
void virConnectDomainEventAgentLifecycleCallback(virConnectPtr conn, virDomainPtr dom, int state, int reason, void * opaque);
void virConnectDomainEventBalloonChangeCallback(virConnectPtr conn, virDomainPtr dom, unsigned long long actual, void * opaque);
void virConnectDomainEventBlockJobCallback(virConnectPtr conn, virDomainPtr dom, const char * disk, int type, int status, void * opaque);
int virConnectDomainEventCallback(virConnectPtr conn, virDomainPtr dom, int event, int detail, void * opaque);
int virConnectDomainEventDeregister(virConnectPtr conn, virConnectDomainEventCallback cb);
int virConnectDomainEventDeregisterAny(virConnectPtr conn, int callbackID);
void virConnectDomainEventDeviceRemovedCallback(virConnectPtr conn, virDomainPtr dom, const char * devAlias, void * opaque);
void virConnectDomainEventDiskChangeCallback(virConnectPtr conn, virDomainPtr dom, const char * oldSrcPath, const char * newSrcPath, const char * devAlias, int reason, void * opaque);
void virConnectDomainEventGenericCallback(virConnectPtr conn, virDomainPtr dom, void * opaque);
void virConnectDomainEventGraphicsCallback(virConnectPtr conn, virDomainPtr dom, int phase, const virDomainEventGraphicsAddress * local, const virDomainEventGraphicsAddress * remote, const char * authScheme, const virDomainEventGraphicsSubject * subject, void * opaque);
void virConnectDomainEventIOErrorCallback(virConnectPtr conn, virDomainPtr dom, const char * srcPath, const char * devAlias, int action, void * opaque);
void virConnectDomainEventIOErrorReasonCallback(virConnectPtr conn, virDomainPtr dom, const char * srcPath, const char * devAlias, int action, const char * reason, void * opaque);
void virConnectDomainEventPMSuspendCallback(virConnectPtr conn, virDomainPtr dom, int reason, void * opaque);
void virConnectDomainEventPMSuspendDiskCallback(virConnectPtr conn, virDomainPtr dom, int reason, void * opaque);
void virConnectDomainEventPMWakeupCallback(virConnectPtr conn, virDomainPtr dom, int reason, void * opaque);
void virConnectDomainEventRTCChangeCallback(virConnectPtr conn, virDomainPtr dom, long long utcoffset, void * opaque);
int virConnectDomainEventRegister(virConnectPtr conn, virConnectDomainEventCallback cb, void * opaque, virFreeCallback freecb);
int virConnectDomainEventRegisterAny(virConnectPtr conn, virDomainPtr dom, int eventID, virConnectDomainEventGenericCallback cb, void * opaque, virFreeCallback freecb);
void virConnectDomainEventTrayChangeCallback(virConnectPtr conn, virDomainPtr dom, const char * devAlias, int reason, void * opaque);
void virConnectDomainEventTunableCallback(virConnectPtr conn, virDomainPtr dom, virTypedParameterPtr params, int nparams, void * opaque);
void virConnectDomainEventWatchdogCallback(virConnectPtr conn, virDomainPtr dom, int action, void * opaque);
char * virConnectDomainXMLFromNative(virConnectPtr conn, const char * nativeFormat, const char * nativeConfig, unsigned int flags);
char * virConnectDomainXMLToNative(virConnectPtr conn, const char * nativeFormat, const char * domainXml, unsigned int flags);
int virConnectGetAllDomainStats(virConnectPtr conn, unsigned int stats, virDomainStatsRecordPtr ** retStats, unsigned int flags);
char * virConnectGetDomainCapabilities(virConnectPtr conn, const char * emulatorbin, const char * arch, const char * machine, const char * virttype, unsigned int flags);
int virConnectListAllDomains(virConnectPtr conn, virDomainPtr ** domains, unsigned int flags);
int virConnectListDefinedDomains(virConnectPtr conn, char ** const names, int maxnames);
int virConnectListDomains(virConnectPtr conn, int * ids, int maxids);
int virConnectNumOfDefinedDomains(virConnectPtr conn);
int virConnectNumOfDomains(virConnectPtr conn);
int virDomainAbortJob(virDomainPtr domain);
int virDomainAttachDevice(virDomainPtr domain, const char * xml);
int virDomainAttachDeviceFlags(virDomainPtr domain, const char * xml, unsigned int flags);
int virDomainBlockCommit(virDomainPtr dom, const char * disk, const char * base, const char * top, unsigned long bandwidth, unsigned int flags);
int virDomainBlockCopy(virDomainPtr dom, const char * disk, const char * destxml, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainBlockJobAbort(virDomainPtr dom, const char * disk, unsigned int flags);
int virDomainBlockJobSetSpeed(virDomainPtr dom, const char * disk, unsigned long bandwidth, unsigned int flags);
int virDomainBlockPeek(virDomainPtr dom, const char * disk, unsigned long long offset, size_t size, void * buffer, unsigned int flags);
int virDomainBlockPull(virDomainPtr dom, const char * disk, unsigned long bandwidth, unsigned int flags);
int virDomainBlockRebase(virDomainPtr dom, const char * disk, const char * base, unsigned long bandwidth, unsigned int flags);
int virDomainBlockResize(virDomainPtr dom, const char * disk, unsigned long long size, unsigned int flags);
int virDomainBlockStats(virDomainPtr dom, const char * disk, virDomainBlockStatsPtr stats, size_t size);
int virDomainBlockStatsFlags(virDomainPtr dom, const char * disk, virTypedParameterPtr params, int * nparams, unsigned int flags);
int virDomainCoreDump(virDomainPtr domain, const char * to, unsigned int flags);
int virDomainCoreDumpWithFormat(virDomainPtr domain, const char * to, unsigned int dumpformat, unsigned int flags);
int virDomainCreate(virDomainPtr domain);
virDomainPtr virDomainCreateLinux(virConnectPtr conn, const char * xmlDesc, unsigned int flags);
int virDomainCreateWithFiles(virDomainPtr domain, unsigned int nfiles, int * files, unsigned int flags);
int virDomainCreateWithFlags(virDomainPtr domain, unsigned int flags);
virDomainPtr virDomainCreateXML(virConnectPtr conn, const char * xmlDesc, unsigned int flags);
virDomainPtr virDomainCreateXMLWithFiles(virConnectPtr conn, const char * xmlDesc, unsigned int nfiles, int * files, unsigned int flags);
virDomainPtr virDomainDefineXML(virConnectPtr conn, const char * xml);
virDomainPtr virDomainDefineXMLFlags(virConnectPtr conn, const char * xml, unsigned int flags);
int virDomainDestroy(virDomainPtr domain);
int virDomainDestroyFlags(virDomainPtr domain, unsigned int flags);
int virDomainDetachDevice(virDomainPtr domain, const char * xml);
int virDomainDetachDeviceFlags(virDomainPtr domain, const char * xml, unsigned int flags);
int virDomainFSFreeze(virDomainPtr dom, const char ** mountpoints, unsigned int nmountpoints, unsigned int flags);
void virDomainFSInfoFree(virDomainFSInfoPtr info);
int virDomainFSThaw(virDomainPtr dom, const char ** mountpoints, unsigned int nmountpoints, unsigned int flags);
int virDomainFSTrim(virDomainPtr dom, const char * mountPoint, unsigned long long minimum, unsigned int flags);
int virDomainFree(virDomainPtr domain);
int virDomainGetAutostart(virDomainPtr domain, int * autostart);
int virDomainGetBlkioParameters(virDomainPtr domain, virTypedParameterPtr params, int * nparams, unsigned int flags);
int virDomainGetBlockInfo(virDomainPtr domain, const char * disk, virDomainBlockInfoPtr info, unsigned int flags);
int virDomainGetBlockIoTune(virDomainPtr dom, const char * disk, virTypedParameterPtr params, int * nparams, unsigned int flags);
int virDomainGetBlockJobInfo(virDomainPtr dom, const char * disk, virDomainBlockJobInfoPtr info, unsigned int flags);
int virDomainGetCPUStats(virDomainPtr domain, virTypedParameterPtr params, unsigned int nparams, int start_cpu, unsigned int ncpus, unsigned int flags);
virConnectPtr virDomainGetConnect(virDomainPtr dom);
int virDomainGetControlInfo(virDomainPtr domain, virDomainControlInfoPtr info, unsigned int flags);
int virDomainGetDiskErrors(virDomainPtr dom, virDomainDiskErrorPtr errors, unsigned int maxerrors, unsigned int flags);
int virDomainGetEmulatorPinInfo(virDomainPtr domain, unsigned char * cpumap, int maplen, unsigned int flags);
int virDomainGetFSInfo(virDomainPtr dom, virDomainFSInfoPtr ** info, unsigned int flags);
char * virDomainGetHostname(virDomainPtr domain, unsigned int flags);
unsigned int virDomainGetID(virDomainPtr domain);
int virDomainGetIOThreadInfo(virDomainPtr dom, virDomainIOThreadInfoPtr ** info, unsigned int flags);
int virDomainGetInfo(virDomainPtr domain, virDomainInfoPtr info);
int virDomainGetInterfaceParameters(virDomainPtr domain, const char * device, virTypedParameterPtr params, int * nparams, unsigned int flags);
int virDomainGetJobInfo(virDomainPtr domain, virDomainJobInfoPtr info);
int virDomainGetJobStats(virDomainPtr domain, int * type, virTypedParameterPtr * params, int * nparams, unsigned int flags);
unsigned long virDomainGetMaxMemory(virDomainPtr domain);
int virDomainGetMaxVcpus(virDomainPtr domain);
int virDomainGetMemoryParameters(virDomainPtr domain, virTypedParameterPtr params, int * nparams, unsigned int flags);
char * virDomainGetMetadata(virDomainPtr domain, int type, const char * uri, unsigned int flags);
const char * virDomainGetName(virDomainPtr domain);
int virDomainGetNumaParameters(virDomainPtr domain, virTypedParameterPtr params, int * nparams, unsigned int flags);
char * virDomainGetOSType(virDomainPtr domain);
int virDomainGetSchedulerParameters(virDomainPtr domain, virTypedParameterPtr params, int * nparams);
int virDomainGetSchedulerParametersFlags(virDomainPtr domain, virTypedParameterPtr params, int * nparams, unsigned int flags);
char * virDomainGetSchedulerType(virDomainPtr domain, int * nparams);
int virDomainGetSecurityLabel(virDomainPtr domain, virSecurityLabelPtr seclabel);
int virDomainGetSecurityLabelList(virDomainPtr domain, virSecurityLabelPtr * seclabels);
int virDomainGetState(virDomainPtr domain, int * state, int * reason, unsigned int flags);
int virDomainGetTime(virDomainPtr dom, long long * seconds, unsigned int * nseconds, unsigned int flags);
int virDomainGetUUID(virDomainPtr domain, unsigned char * uuid);
int virDomainGetUUIDString(virDomainPtr domain, char * buf);
int virDomainGetVcpuPinInfo(virDomainPtr domain, int ncpumaps, unsigned char * cpumaps, int maplen, unsigned int flags);
int virDomainGetVcpus(virDomainPtr domain, virVcpuInfoPtr info, int maxinfo, unsigned char * cpumaps, int maplen);
int virDomainGetVcpusFlags(virDomainPtr domain, unsigned int flags);
char * virDomainGetXMLDesc(virDomainPtr domain, unsigned int flags);
int virDomainHasManagedSaveImage(virDomainPtr dom, unsigned int flags);
void virDomainIOThreadInfoFree(virDomainIOThreadInfoPtr info);
int virDomainInjectNMI(virDomainPtr domain, unsigned int flags);
int virDomainInterfaceAddresses(virDomainPtr dom, virDomainInterfacePtr ** ifaces, unsigned int source, unsigned int flags);
void virDomainInterfaceFree(virDomainInterfacePtr iface);
int virDomainInterfaceStats(virDomainPtr dom, const char * path, virDomainInterfaceStatsPtr stats, size_t size);
int virDomainIsActive(virDomainPtr dom);
int virDomainIsPersistent(virDomainPtr dom);
int virDomainIsUpdated(virDomainPtr dom);
int virDomainListGetStats(virDomainPtr * doms, unsigned int stats, virDomainStatsRecordPtr ** retStats, unsigned int flags);
virDomainPtr virDomainLookupByID(virConnectPtr conn, int id);
virDomainPtr virDomainLookupByName(virConnectPtr conn, const char * name);
virDomainPtr virDomainLookupByUUID(virConnectPtr conn, const unsigned char * uuid);
virDomainPtr virDomainLookupByUUIDString(virConnectPtr conn, const char * uuidstr);
int virDomainManagedSave(virDomainPtr dom, unsigned int flags);
int virDomainManagedSaveRemove(virDomainPtr dom, unsigned int flags);
int virDomainMemoryPeek(virDomainPtr dom, unsigned long long start, size_t size, void * buffer, unsigned int flags);
int virDomainMemoryStats(virDomainPtr dom, virDomainMemoryStatPtr stats, unsigned int nr_stats, unsigned int flags);
virDomainPtr virDomainMigrate(virDomainPtr domain, virConnectPtr dconn, unsigned long flags, const char * dname, const char * uri, unsigned long bandwidth);
virDomainPtr virDomainMigrate2(virDomainPtr domain, virConnectPtr dconn, const char * dxml, unsigned long flags, const char * dname, const char * uri, unsigned long bandwidth);
virDomainPtr virDomainMigrate3(virDomainPtr domain, virConnectPtr dconn, virTypedParameterPtr params, unsigned int nparams, unsigned int flags);
int virDomainMigrateGetCompressionCache(virDomainPtr domain, unsigned long long * cacheSize, unsigned int flags);
int virDomainMigrateGetMaxSpeed(virDomainPtr domain, unsigned long * bandwidth, unsigned int flags);
int virDomainMigrateSetCompressionCache(virDomainPtr domain, unsigned long long cacheSize, unsigned int flags);
int virDomainMigrateSetMaxDowntime(virDomainPtr domain, unsigned long long downtime, unsigned int flags);
int virDomainMigrateSetMaxSpeed(virDomainPtr domain, unsigned long bandwidth, unsigned int flags);
int virDomainMigrateToURI(virDomainPtr domain, const char * duri, unsigned long flags, const char * dname, unsigned long bandwidth);
int virDomainMigrateToURI2(virDomainPtr domain, const char * dconnuri, const char * miguri, const char * dxml, unsigned long flags, const char * dname, unsigned long bandwidth);
int virDomainMigrateToURI3(virDomainPtr domain, const char * dconnuri, virTypedParameterPtr params, unsigned int nparams, unsigned int flags);
int virDomainOpenChannel(virDomainPtr dom, const char * name, virStreamPtr st, unsigned int flags);
int virDomainOpenConsole(virDomainPtr dom, const char * dev_name, virStreamPtr st, unsigned int flags);
int virDomainOpenGraphics(virDomainPtr dom, unsigned int idx, int fd, unsigned int flags);
int virDomainOpenGraphicsFD(virDomainPtr dom, unsigned int idx, unsigned int flags);
int virDomainPMSuspendForDuration(virDomainPtr dom, unsigned int target, unsigned long long duration, unsigned int flags);
int virDomainPMWakeup(virDomainPtr dom, unsigned int flags);
int virDomainPinEmulator(virDomainPtr domain, unsigned char * cpumap, int maplen, unsigned int flags);
int virDomainPinIOThread(virDomainPtr domain, unsigned int iothread_id, unsigned char * cpumap, int maplen, unsigned int flags);
int virDomainPinVcpu(virDomainPtr domain, unsigned int vcpu, unsigned char * cpumap, int maplen);
int virDomainPinVcpuFlags(virDomainPtr domain, unsigned int vcpu, unsigned char * cpumap, int maplen, unsigned int flags);
int virDomainReboot(virDomainPtr domain, unsigned int flags);
int virDomainRef(virDomainPtr domain);
int virDomainReset(virDomainPtr domain, unsigned int flags);
int virDomainRestore(virConnectPtr conn, const char * from);
int virDomainRestoreFlags(virConnectPtr conn, const char * from, const char * dxml, unsigned int flags);
int virDomainResume(virDomainPtr domain);
int virDomainSave(virDomainPtr domain, const char * to);
int virDomainSaveFlags(virDomainPtr domain, const char * to, const char * dxml, unsigned int flags);
int virDomainSaveImageDefineXML(virConnectPtr conn, const char * file, const char * dxml, unsigned int flags);
char * virDomainSaveImageGetXMLDesc(virConnectPtr conn, const char * file, unsigned int flags);
char * virDomainScreenshot(virDomainPtr domain, virStreamPtr stream, unsigned int screen, unsigned int flags);
int virDomainSendKey(virDomainPtr domain, unsigned int codeset, unsigned int holdtime, unsigned int * keycodes, int nkeycodes, unsigned int flags);
int virDomainSendProcessSignal(virDomainPtr domain, long long pid_value, unsigned int signum, unsigned int flags);
int virDomainSetAutostart(virDomainPtr domain, int autostart);
int virDomainSetBlkioParameters(virDomainPtr domain, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetBlockIoTune(virDomainPtr dom, const char * disk, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetInterfaceParameters(virDomainPtr domain, const char * device, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetMaxMemory(virDomainPtr domain, unsigned long memory);
int virDomainSetMemory(virDomainPtr domain, unsigned long memory);
int virDomainSetMemoryFlags(virDomainPtr domain, unsigned long memory, unsigned int flags);
int virDomainSetMemoryParameters(virDomainPtr domain, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetMemoryStatsPeriod(virDomainPtr domain, int period, unsigned int flags);
int virDomainSetMetadata(virDomainPtr domain, int type, const char * metadata, const char * key, const char * uri, unsigned int flags);
int virDomainSetNumaParameters(virDomainPtr domain, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetSchedulerParameters(virDomainPtr domain, virTypedParameterPtr params, int nparams);
int virDomainSetSchedulerParametersFlags(virDomainPtr domain, virTypedParameterPtr params, int nparams, unsigned int flags);
int virDomainSetTime(virDomainPtr dom, long long seconds, unsigned int nseconds, unsigned int flags);
int virDomainSetVcpus(virDomainPtr domain, unsigned int nvcpus);
int virDomainSetVcpusFlags(virDomainPtr domain, unsigned int nvcpus, unsigned int flags);
int virDomainShutdown(virDomainPtr domain);
int virDomainShutdownFlags(virDomainPtr domain, unsigned int flags);
void virDomainStatsRecordListFree(virDomainStatsRecordPtr * stats);
int virDomainSuspend(virDomainPtr domain);
int virDomainUndefine(virDomainPtr domain);
int virDomainUndefineFlags(virDomainPtr domain, unsigned int flags);
int virDomainUpdateDeviceFlags(virDomainPtr domain, const char * xml, unsigned int flags);

#<libvirt-domain-snapshot>
int virDomainHasCurrentSnapshot(virDomainPtr domain, unsigned int flags);
int virDomainListAllSnapshots(virDomainPtr domain, virDomainSnapshotPtr ** snaps, unsigned int flags);
int virDomainRevertToSnapshot(virDomainSnapshotPtr snapshot, unsigned int flags);
virDomainSnapshotPtr virDomainSnapshotCreateXML(virDomainPtr domain, const char * xmlDesc, unsigned int flags);
virDomainSnapshotPtr virDomainSnapshotCurrent(virDomainPtr domain, unsigned int flags);
int virDomainSnapshotDelete(virDomainSnapshotPtr snapshot, unsigned int flags);
int virDomainSnapshotFree(virDomainSnapshotPtr snapshot);
virConnectPtr virDomainSnapshotGetConnect(virDomainSnapshotPtr snapshot);
virDomainPtr virDomainSnapshotGetDomain(virDomainSnapshotPtr snapshot);
const char * virDomainSnapshotGetName(virDomainSnapshotPtr snapshot);
virDomainSnapshotPtr virDomainSnapshotGetParent(virDomainSnapshotPtr snapshot, unsigned int flags);
char * virDomainSnapshotGetXMLDesc(virDomainSnapshotPtr snapshot, unsigned int flags);
int virDomainSnapshotHasMetadata(virDomainSnapshotPtr snapshot, unsigned int flags);
int virDomainSnapshotIsCurrent(virDomainSnapshotPtr snapshot, unsigned int flags);
int virDomainSnapshotListAllChildren(virDomainSnapshotPtr snapshot, virDomainSnapshotPtr ** snaps, unsigned int flags);
int virDomainSnapshotListChildrenNames(virDomainSnapshotPtr snapshot, char ** names, int nameslen, unsigned int flags);
int virDomainSnapshotListNames(virDomainPtr domain, char ** names, int nameslen, unsigned int flags);
virDomainSnapshotPtr virDomainSnapshotLookupByName(virDomainPtr domain, const char * name, unsigned int flags);
int virDomainSnapshotNum(virDomainPtr domain, unsigned int flags);
int virDomainSnapshotNumChildren(virDomainSnapshotPtr snapshot, unsigned int flags);
int virDomainSnapshotRef(virDomainSnapshotPtr snapshot);

#<libvirt-error>
int virConnCopyLastError(virConnectPtr conn, virErrorPtr to);
virErrorPtr virConnGetLastError(virConnectPtr conn);
void virConnResetLastError(virConnectPtr conn);
void virConnSetErrorFunc(virConnectPtr conn, void * userData, virErrorFunc handler);
int virCopyLastError(virErrorPtr to);
void virDefaultErrorFunc(virErrorPtr err);
void virErrorFunc(void * userData, virErrorPtr error);
void virFreeError(virErrorPtr err);
virErrorPtr virGetLastError(void);
const char * virGetLastErrorMessage(void);
void virResetError(virErrorPtr err);
void virResetLastError(void);
virErrorPtr virSaveLastError(void);
void virSetErrorFunc(void * userData, virErrorFunc handler);

#<libvirt-event>
int virEventAddHandle(int fd, int events, virEventHandleCallback cb, void * opaque, virFreeCallback ff);
int virEventAddHandleFunc(int fd, int event, virEventHandleCallback cb, void * opaque, virFreeCallback ff);
int virEventAddTimeout(int timeout, virEventTimeoutCallback cb, void * opaque, virFreeCallback ff);
int virEventAddTimeoutFunc(int timeout, virEventTimeoutCallback cb, void * opaque, virFreeCallback ff);
void virEventHandleCallback(int watch, int fd, int events, void * opaque);
int virEventRegisterDefaultImpl(void);
void virEventRegisterImpl(virEventAddHandleFunc addHandle, virEventUpdateHandleFunc updateHandle, virEventRemoveHandleFunc removeHandle, virEventAddTimeoutFunc addTimeout, virEventUpdateTimeoutFunc updateTimeout, virEventRemoveTimeoutFunc removeTimeout);
int virEventRemoveHandle(int watch);
int virEventRemoveHandleFunc(int watch);
int virEventRemoveTimeout(int timer);
int virEventRemoveTimeoutFunc(int timer);
int virEventRunDefaultImpl(void);
void virEventTimeoutCallback(int timer, void * opaque);
void virEventUpdateHandle(int watch, int events);
void virEventUpdateHandleFunc(int watch, int event);
void virEventUpdateTimeout(int timer, int timeout);
void virEventUpdateTimeoutFunc(int timer, int timeout);

#<libvirt-host>
int virConnectAuthCallbackPtr(virConnectCredentialPtr cred, unsigned int ncred, void * cbdata);
char * virConnectBaselineCPU(virConnectPtr conn, const char ** xmlCPUs, unsigned int ncpus, unsigned int flags);
int virConnectClose(virConnectPtr conn);
void virConnectCloseFunc(virConnectPtr conn, int reason, void * opaque);
int virConnectCompareCPU(virConnectPtr conn, const char * xmlDesc, unsigned int flags);
int virConnectGetCPUModelNames(virConnectPtr conn, const char * arch, char ** * models, unsigned int flags);
char * virConnectGetCapabilities(virConnectPtr conn);
char * virConnectGetHostname(virConnectPtr conn);
int virConnectGetLibVersion(virConnectPtr conn, unsigned long * libVer);
int virConnectGetMaxVcpus(virConnectPtr conn, const char * type);
char * virConnectGetSysinfo(virConnectPtr conn, unsigned int flags);
const char * virConnectGetType(virConnectPtr conn);
char * virConnectGetURI(virConnectPtr conn);
int virConnectGetVersion(virConnectPtr conn, unsigned long * hvVer);
int virConnectIsAlive(virConnectPtr conn);
int virConnectIsEncrypted(virConnectPtr conn);
int virConnectIsSecure(virConnectPtr conn);
virConnectPtr virConnectOpen(const char * name);
virConnectPtr virConnectOpenAuth(const char * name, virConnectAuthPtr auth, unsigned int flags);
virConnectPtr virConnectOpenReadOnly(const char * name);
int virConnectRef(virConnectPtr conn);
int virConnectRegisterCloseCallback(virConnectPtr conn, virConnectCloseFunc cb, void * opaque, virFreeCallback freecb);
int virConnectSetKeepAlive(virConnectPtr conn, int interval, unsigned int count);
int virConnectUnregisterCloseCallback(virConnectPtr conn, virConnectCloseFunc cb);
void virFreeCallback(void * opaque);
int virGetVersion(unsigned long * libVer, const char * type, unsigned long * typeVer);
int virInitialize(void);
int virNodeAllocPages(virConnectPtr conn, unsigned int npages, unsigned int * pageSizes, unsigned long long * pageCounts, int startCell, unsigned int cellCount, unsigned int flags);
int virNodeGetCPUMap(virConnectPtr conn, unsigned char ** cpumap, unsigned int * online, unsigned int flags);
int virNodeGetCPUStats(virConnectPtr conn, int cpuNum, virNodeCPUStatsPtr params, int * nparams, unsigned int flags);
int virNodeGetCellsFreeMemory(virConnectPtr conn, unsigned long long * freeMems, int startCell, int maxCells);
unsigned long long virNodeGetFreeMemory(virConnectPtr conn);
int virNodeGetFreePages(virConnectPtr conn, unsigned int npages, unsigned int * pages, int startCell, unsigned int cellCount, unsigned long long * counts, unsigned int flags);
int virNodeGetInfo(virConnectPtr conn, virNodeInfoPtr info);
int virNodeGetMemoryParameters(virConnectPtr conn, virTypedParameterPtr params, int * nparams, unsigned int flags);
int virNodeGetMemoryStats(virConnectPtr conn, int cellNum, virNodeMemoryStatsPtr params, int * nparams, unsigned int flags);
int virNodeGetSecurityModel(virConnectPtr conn, virSecurityModelPtr secmodel);
int virNodeSetMemoryParameters(virConnectPtr conn, virTypedParameterPtr params, int nparams, unsigned int flags);
int virNodeSuspendForDuration(virConnectPtr conn, unsigned int target, unsigned long long duration, unsigned int flags);
int virTypedParamsAddBoolean(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, int value);
int virTypedParamsAddDouble(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, double value);
int virTypedParamsAddFromString(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, int type, const char * value);
int virTypedParamsAddInt(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, int value);
int virTypedParamsAddLLong(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, long long value);
int virTypedParamsAddString(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, const char * value);
int virTypedParamsAddUInt(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, unsigned int value);
int virTypedParamsAddULLong(virTypedParameterPtr * params, int * nparams, int * maxparams, const char * name, unsigned long long value);
void virTypedParamsClear(virTypedParameterPtr params, int nparams);
void virTypedParamsFree(virTypedParameterPtr params, int nparams);
virTypedParameterPtr virTypedParamsGet(virTypedParameterPtr params, int nparams, const char * name);
int virTypedParamsGetBoolean(virTypedParameterPtr params, int nparams, const char * name, int * value);
int virTypedParamsGetDouble(virTypedParameterPtr params, int nparams, const char * name, double * value);
int virTypedParamsGetInt(virTypedParameterPtr params, int nparams, const char * name, int * value);
int virTypedParamsGetLLong(virTypedParameterPtr params, int nparams, const char * name, long long * value);
int virTypedParamsGetString(virTypedParameterPtr params, int nparams, const char * name, const char ** value);
int virTypedParamsGetUInt(virTypedParameterPtr params, int nparams, const char * name, unsigned int * value);
int virTypedParamsGetULLong(virTypedParameterPtr params, int nparams, const char * name, unsigned long long * value);

#<libvirt-interface>
int virConnectListAllInterfaces(virConnectPtr conn, virInterfacePtr ** ifaces, unsigned int flags);
int virConnectListDefinedInterfaces(virConnectPtr conn, char ** const names, int maxnames);
int virConnectListInterfaces(virConnectPtr conn, char ** const names, int maxnames);
int virConnectNumOfDefinedInterfaces(virConnectPtr conn);
int virConnectNumOfInterfaces(virConnectPtr conn);
int virInterfaceChangeBegin(virConnectPtr conn, unsigned int flags);
int virInterfaceChangeCommit(virConnectPtr conn, unsigned int flags);
int virInterfaceChangeRollback(virConnectPtr conn, unsigned int flags);
int virInterfaceCreate(virInterfacePtr iface, unsigned int flags);
virInterfacePtr virInterfaceDefineXML(virConnectPtr conn, const char * xml, unsigned int flags);
int virInterfaceDestroy(virInterfacePtr iface, unsigned int flags);
int virInterfaceFree(virInterfacePtr iface);
virConnectPtr virInterfaceGetConnect(virInterfacePtr iface);
const char * virInterfaceGetMACString(virInterfacePtr iface);
const char * virInterfaceGetName(virInterfacePtr iface);
char * virInterfaceGetXMLDesc(virInterfacePtr iface, unsigned int flags);
int virInterfaceIsActive(virInterfacePtr iface);
virInterfacePtr virInterfaceLookupByMACString(virConnectPtr conn, const char * macstr);
virInterfacePtr virInterfaceLookupByName(virConnectPtr conn, const char * name);
int virInterfaceRef(virInterfacePtr iface);
int virInterfaceUndefine(virInterfacePtr iface);

#<libvirt-network>
int virConnectListAllNetworks(virConnectPtr conn, virNetworkPtr ** nets, unsigned int flags);
int virConnectListDefinedNetworks(virConnectPtr conn, char ** const names, int maxnames);
int virConnectListNetworks(virConnectPtr conn, char ** const names, int maxnames);
int virConnectNetworkEventDeregisterAny(virConnectPtr conn, int callbackID);
void virConnectNetworkEventGenericCallback(virConnectPtr conn, virNetworkPtr net, void * opaque);

void virConnectNetworkEventLifecycleCallback(virConnectPtr conn, virNetworkPtr net, int event, int detail, void * opaque);

int virConnectNetworkEventRegisterAny(virConnectPtr conn, virNetworkPtr net, int eventID, virConnectNetworkEventGenericCallback cb, void * opaque, virFreeCallback freecb);
int virConnectNumOfDefinedNetworks(virConnectPtr conn);
int virConnectNumOfNetworks(virConnectPtr conn);
int virNetworkCreate(virNetworkPtr network);
virNetworkPtr virNetworkCreateXML(virConnectPtr conn, const char * xmlDesc);
void virNetworkDHCPLeaseFree(virNetworkDHCPLeasePtr lease);
virNetworkPtr virNetworkDefineXML(virConnectPtr conn, const char * xml);
int virNetworkDestroy(virNetworkPtr network);
int virNetworkFree(virNetworkPtr network);
int virNetworkGetAutostart(virNetworkPtr network, int * autostart);
char * virNetworkGetBridgeName(virNetworkPtr network);
virConnectPtr virNetworkGetConnect(virNetworkPtr net);
int virNetworkGetDHCPLeases(virNetworkPtr network, const char * mac, virNetworkDHCPLeasePtr ** leases, unsigned int flags);
const char * virNetworkGetName(virNetworkPtr network);
int virNetworkGetUUID(virNetworkPtr network, unsigned char * uuid);
int virNetworkGetUUIDString(virNetworkPtr network, char * buf);
char * virNetworkGetXMLDesc(virNetworkPtr network, unsigned int flags);
int virNetworkIsActive(virNetworkPtr net);
int virNetworkIsPersistent(virNetworkPtr net);
virNetworkPtr virNetworkLookupByName(virConnectPtr conn, const char * name);
virNetworkPtr virNetworkLookupByUUID(virConnectPtr conn, const unsigned char * uuid);
virNetworkPtr virNetworkLookupByUUIDString(virConnectPtr conn, const char * uuidstr);
int virNetworkRef(virNetworkPtr network);
int virNetworkSetAutostart(virNetworkPtr network, int autostart);
int virNetworkUndefine(virNetworkPtr network);
int virNetworkUpdate(virNetworkPtr network, unsigned int command, unsigned int section, int parentIndex, const char * xml, unsigned int flags);

#<libvirt-nodedev>
int virConnectListAllNodeDevices(virConnectPtr conn, virNodeDevicePtr ** devices, unsigned int flags);
virNodeDevicePtr virNodeDeviceCreateXML(virConnectPtr conn, const char * xmlDesc, unsigned int flags);
int virNodeDeviceDestroy(virNodeDevicePtr dev);
int virNodeDeviceDetachFlags(virNodeDevicePtr dev, const char * driverName, unsigned int flags);
int virNodeDeviceDettach(virNodeDevicePtr dev);
int virNodeDeviceFree(virNodeDevicePtr dev);
const char * virNodeDeviceGetName(virNodeDevicePtr dev);
const char * virNodeDeviceGetParent(virNodeDevicePtr dev);
char * virNodeDeviceGetXMLDesc(virNodeDevicePtr dev, unsigned int flags);
int virNodeDeviceListCaps(virNodeDevicePtr dev, char ** const names, int maxnames);
virNodeDevicePtr virNodeDeviceLookupByName(virConnectPtr conn, const char * name);
virNodeDevicePtr virNodeDeviceLookupSCSIHostByWWN(virConnectPtr conn, const char * wwnn, const char * wwpn, unsigned int flags);
int virNodeDeviceNumOfCaps(virNodeDevicePtr dev);
int virNodeDeviceReAttach(virNodeDevicePtr dev);
int virNodeDeviceRef(virNodeDevicePtr dev);
int virNodeDeviceReset(virNodeDevicePtr dev);
int virNodeListDevices(virConnectPtr conn, const char * cap, char ** const names, int maxnames, unsigned int flags);
int virNodeNumOfDevices(virConnectPtr conn, const char * cap, unsigned int flags);

#<libvirt-nwfilter>
int virConnectListAllNWFilters(virConnectPtr conn, virNWFilterPtr ** filters, unsigned int flags);
int virConnectListNWFilters(virConnectPtr conn, char ** const names, int maxnames);
int virConnectNumOfNWFilters(virConnectPtr conn);
virNWFilterPtr virNWFilterDefineXML(virConnectPtr conn, const char * xmlDesc);
int virNWFilterFree(virNWFilterPtr nwfilter);
const char * virNWFilterGetName(virNWFilterPtr nwfilter);
int virNWFilterGetUUID(virNWFilterPtr nwfilter, unsigned char * uuid);
int virNWFilterGetUUIDString(virNWFilterPtr nwfilter, char * buf);
char * virNWFilterGetXMLDesc(virNWFilterPtr nwfilter, unsigned int flags);
virNWFilterPtr virNWFilterLookupByName(virConnectPtr conn, const char * name);
virNWFilterPtr virNWFilterLookupByUUID(virConnectPtr conn, const unsigned char * uuid);
virNWFilterPtr virNWFilterLookupByUUIDString(virConnectPtr conn, const char * uuidstr);
int virNWFilterRef(virNWFilterPtr nwfilter);
int virNWFilterUndefine(virNWFilterPtr nwfilter);

#<libvirt-secret>
int virConnectListAllSecrets(virConnectPtr conn, virSecretPtr ** secrets, unsigned int flags);
int virConnectListSecrets(virConnectPtr conn, char ** uuids, int maxuuids);
int virConnectNumOfSecrets(virConnectPtr conn);
virSecretPtr virSecretDefineXML(virConnectPtr conn, const char * xml, unsigned int flags);
int virSecretFree(virSecretPtr secret);
virConnectPtr virSecretGetConnect(virSecretPtr secret);
int virSecretGetUUID(virSecretPtr secret, unsigned char * uuid);
int virSecretGetUUIDString(virSecretPtr secret, char * buf);
const char * virSecretGetUsageID(virSecretPtr secret);
int virSecretGetUsageType(virSecretPtr secret);
unsigned char * virSecretGetValue(virSecretPtr secret, size_t * value_size, unsigned int flags);
char * virSecretGetXMLDesc(virSecretPtr secret, unsigned int flags);
virSecretPtr virSecretLookupByUUID(virConnectPtr conn, const unsigned char * uuid);
virSecretPtr virSecretLookupByUUIDString(virConnectPtr conn, const char * uuidstr);
virSecretPtr virSecretLookupByUsage(virConnectPtr conn, int usageType, const char * usageID);
int virSecretRef(virSecretPtr secret);
int virSecretSetValue(virSecretPtr secret, const unsigned char * value, size_t value_size, unsigned int flags);
int virSecretUndefine(virSecretPtr secret);

#<libvirt-storage>
char * virConnectFindStoragePoolSources(virConnectPtr conn, const char * type, const char * srcSpec, unsigned int flags);
int virConnectListAllStoragePools(virConnectPtr conn, virStoragePoolPtr ** pools, unsigned int flags);
int virConnectListDefinedStoragePools(virConnectPtr conn, char ** const names, int maxnames);
int virConnectListStoragePools(virConnectPtr conn, char ** const names, int maxnames);
int virConnectNumOfDefinedStoragePools(virConnectPtr conn);
int virConnectNumOfStoragePools(virConnectPtr conn);
int virStoragePoolBuild(virStoragePoolPtr pool, unsigned int flags);
int virStoragePoolCreate(virStoragePoolPtr pool, unsigned int flags);
virStoragePoolPtr virStoragePoolCreateXML(virConnectPtr conn, const char * xmlDesc, unsigned int flags);
virStoragePoolPtr virStoragePoolDefineXML(virConnectPtr conn, const char * xml, unsigned int flags);
int virStoragePoolDelete(virStoragePoolPtr pool, unsigned int flags);
int virStoragePoolDestroy(virStoragePoolPtr pool);
int virStoragePoolFree(virStoragePoolPtr pool);
int virStoragePoolGetAutostart(virStoragePoolPtr pool, int * autostart);
virConnectPtr virStoragePoolGetConnect(virStoragePoolPtr pool);
int virStoragePoolGetInfo(virStoragePoolPtr pool, virStoragePoolInfoPtr info);
const char * virStoragePoolGetName(virStoragePoolPtr pool);
int virStoragePoolGetUUID(virStoragePoolPtr pool, unsigned char * uuid);
int virStoragePoolGetUUIDString(virStoragePoolPtr pool, char * buf);
char * virStoragePoolGetXMLDesc(virStoragePoolPtr pool, unsigned int flags);
int virStoragePoolIsActive(virStoragePoolPtr pool);
int virStoragePoolIsPersistent(virStoragePoolPtr pool);
int virStoragePoolListAllVolumes(virStoragePoolPtr pool, virStorageVolPtr ** vols, unsigned int flags);
int virStoragePoolListVolumes(virStoragePoolPtr pool, char ** const names, int maxnames);
virStoragePoolPtr virStoragePoolLookupByName(virConnectPtr conn, const char * name);
virStoragePoolPtr virStoragePoolLookupByUUID(virConnectPtr conn, const unsigned char * uuid);
virStoragePoolPtr virStoragePoolLookupByUUIDString(virConnectPtr conn, const char * uuidstr);
virStoragePoolPtr virStoragePoolLookupByVolume(virStorageVolPtr vol);
int virStoragePoolNumOfVolumes(virStoragePoolPtr pool);
int virStoragePoolRef(virStoragePoolPtr pool);
int virStoragePoolRefresh(virStoragePoolPtr pool, unsigned int flags);
int virStoragePoolSetAutostart(virStoragePoolPtr pool, int autostart);
int virStoragePoolUndefine(virStoragePoolPtr pool);
virStorageVolPtr virStorageVolCreateXML(virStoragePoolPtr pool, const char * xmlDesc, unsigned int flags);
virStorageVolPtr virStorageVolCreateXMLFrom(virStoragePoolPtr pool, const char * xmlDesc, virStorageVolPtr clonevol, unsigned int flags);
int virStorageVolDelete(virStorageVolPtr vol, unsigned int flags);
int virStorageVolDownload(virStorageVolPtr vol, virStreamPtr stream, unsigned long long offset, unsigned long long length, unsigned int flags);
int virStorageVolFree(virStorageVolPtr vol);
virConnectPtr virStorageVolGetConnect(virStorageVolPtr vol);
int virStorageVolGetInfo(virStorageVolPtr vol, virStorageVolInfoPtr info);
const char * virStorageVolGetKey(virStorageVolPtr vol);
const char * virStorageVolGetName(virStorageVolPtr vol);
char * virStorageVolGetPath(virStorageVolPtr vol);
char * virStorageVolGetXMLDesc(virStorageVolPtr vol, unsigned int flags);
virStorageVolPtr virStorageVolLookupByKey(virConnectPtr conn, const char * key);
virStorageVolPtr virStorageVolLookupByName(virStoragePoolPtr pool, const char * name);
virStorageVolPtr virStorageVolLookupByPath(virConnectPtr conn, const char * path);
int virStorageVolRef(virStorageVolPtr vol);
int virStorageVolResize(virStorageVolPtr vol, unsigned long long capacity, unsigned int flags);
int virStorageVolUpload(virStorageVolPtr vol, virStreamPtr stream, unsigned long long offset, unsigned long long length, unsigned int flags);
int virStorageVolWipe(virStorageVolPtr vol, unsigned int flags);
int virStorageVolWipePattern(virStorageVolPtr vol, unsigned int algorithm, unsigned int flags);

#<libvirt-stream>
int virStreamAbort(virStreamPtr stream);
int virStreamEventAddCallback(virStreamPtr stream, int events, virStreamEventCallback cb, void * opaque, virFreeCallback ff);
void virStreamEventCallback(virStreamPtr stream, int events, void * opaque);
int virStreamEventRemoveCallback(virStreamPtr stream);
int virStreamEventUpdateCallback(virStreamPtr stream, int events);
int virStreamFinish(virStreamPtr stream);
int virStreamFree(virStreamPtr stream);
virStreamPtr virStreamNew(virConnectPtr conn, unsigned int flags);
int virStreamRecv(virStreamPtr stream, char * data, size_t nbytes);
int virStreamRecvAll(virStreamPtr stream, virStreamSinkFunc handler, void * opaque);
int virStreamRef(virStreamPtr stream);
int virStreamSend(virStreamPtr stream, const char * data, size_t nbytes);
int virStreamSendAll(virStreamPtr stream, virStreamSourceFunc handler, void * opaque);
int virStreamSinkFunc(virStreamPtr st, const char * data, size_t nbytes, void * opaque);
int virStreamSourceFunc(virStreamPtr st, char * data, size_t nbytes, void * opaque);
