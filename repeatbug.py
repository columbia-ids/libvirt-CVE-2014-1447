#!/usr/bin/env python

import subprocess, sys, time, os

def measure_runs():
	subprocess.call(['pkill', '-9', 'libvirtd'])
	try: os.remove(os.path.join(os.getenviron('HOME'), '.libvirt', 'libvirtd.pid'))
	except: None
	count=0
	server_env = dict(os.environ)
	server_env['LD_PRELOAD'] = os.path.join(os.getcwd(), 'interpose.so')
	server = subprocess.Popen('server/install/sbin/libvirtd', env=server_env, stderr=open(os.devnull))
	while(not server.poll()):
		count += 1
		subprocess.Popen('./bug.sh', stderr=open(os.devnull))
	subprocess.call(['pkill', '-9', 'virsh'])
	return count

total_count=0
for i in range(5):
	time.sleep(1)
	total_count += measure_runs()

subprocess.call(['pkill', '-9', 'libvirtd'])
print str(total_count/5.0) + ' average runs per failure.'
