#!/usr/bin/env python

import subprocess, sys, time, os

def measure_runs():
	subprocess.call(['pkill', 'libvirtd'])
	count=0
	server_env = dict(os.environ)
	server_env['LD_PRELOAD'] = os.path.join(os.getcwd(), 'interpose.so')
	#time.sleep(10)
	server = subprocess.Popen('server/install/sbin/libvirtd', env=server_env, stderr=open(os.devnull))
	while(True):
		count += 1
		if server.poll():
			print str(count) + ' runs until failure.'
			return count
		subprocess.Popen('./bug.sh', stderr=open(os.devnull))
	subprocess.call(['pkill', 'bug.sh'])

total_count=0
for i in range(5):
	time.sleep(1)
	total_count += measure_runs()

print str(total_count/5.0) + ' average runs per failure.'
